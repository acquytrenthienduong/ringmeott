#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef RINGMEOTTSDK_SWIFT_H
#define RINGMEOTTSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RingmeOttSdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class UIImage;
@class CALayer;
@class NSCoder;

/// Represents a subclass of <code>UIImageView</code> for displaying animated image.
/// Different from showing animated image in a normal <code>UIImageView</code> (which load all frames at one time),
/// <code>AnimatedImageView</code> only tries to load several frames (defined by <code>framePreloadCount</code>) to reduce memory usage.
/// It provides a tradeoff between memory usage and CPU time. If you have a memory issue when using a normal image
/// view to load GIF data, you could give this class a try.
/// Kingfisher supports setting GIF animated data to either <code>UIImageView</code> and <code>AnimatedImageView</code> out of box. So
/// it would be fairly easy to switch between them.
SWIFT_CLASS("_TtC12RingmeOttSdk17AnimatedImageView")
@interface AnimatedImageView : UIImageView
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, readonly, getter=isAnimating) BOOL animating;
/// Starts the animation.
- (void)startAnimating;
/// Stops the animation.
- (void)stopAnimating;
- (void)displayLayer:(CALayer * _Nonnull)layer;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end















@class UIColor;

IB_DESIGNABLE
SWIFT_CLASS("_TtC12RingmeOttSdk15EZYGradientView")
@interface EZYGradientView : UIView
/// First color of gradient i.e. it appears on top when angleº set to 0.0.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull firstColor;
/// Second color of gradient i.e. it appears in bottom when angleº set to 0.0.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull secondColor;
/// Angleº will describe the tilt of gradient.
@property (nonatomic) IBInspectable float angleº;
/// Color ratio will describe the proportion of colors. It’s value ranges from 0.0 to 1.0 default is 0.5.
@property (nonatomic) IBInspectable float colorRatio;
/// Fade intensity will describe the disperse of colors. It’s value ranges from 0.0 to 1.0 default is 0.0.
@property (nonatomic) IBInspectable float fadeIntensity;
/// Is blur allow to add visual effect on gradient view. Can’t be change during run-time.
@property (nonatomic) IBInspectable BOOL isBlur;
/// Blur opacity will describe the transparency of blur. It’s value ranges from 0.0 to 1.0 default is 0.0. It is suggested to set EZYGradientView background color as clear color for better results.
@property (nonatomic) IBInspectable float blurOpacity;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end


typedef SWIFT_ENUM(NSInteger, HTTPStatusCode, closed) {
/// Continue: 100
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.2.1">RFC7231, Section 6.2.1</a>
  HTTPStatusCodeContinue = 100,
/// Switching Protocols: 101
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.2.2">RFC7231, Section 6.2.2</a>
  HTTPStatusCodeSwitchingProtocols = 101,
/// Processing: 102
/// seealso:
/// <a href="http://www.iana.org/go/rfc2518">RFC2518</a>
  HTTPStatusCodeProcessing = 102,
/// Early Hints: 103
/// seealso:
/// <a href="http://www.iana.org/go/rfc8297">RFC8297</a>
  HTTPStatusCodeEarlyHints = 103,
/// OK: 200
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.3.1">RFC7231, Section 6.3.1</a>
  HTTPStatusCodeOK SWIFT_COMPILE_NAME("ok") = 200,
/// Created: 201
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.3.2">RFC7231, Section 6.3.2</a>
  HTTPStatusCodeCreated = 201,
/// Accepted: 202
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.3.3">RFC7231, Section 6.3.3</a>
  HTTPStatusCodeAccepted = 202,
/// Non-Authoritative Information: 203
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.3.4">RFC7231, Section 6.3.4</a>
  HTTPStatusCodeNonAuthoritativeInformation = 203,
/// No Content: 204
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.3.5">RFC7231, Section 6.3.5</a>
  HTTPStatusCodeNoContent = 204,
/// Reset Content: 205
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.3.6">RFC7231, Section 6.3.6</a>
  HTTPStatusCodeResetContent = 205,
/// Partial Content: 206
/// seealso:
/// <a href="http://www.iana.org/go/rfc7233#section-4.1">RFC7233, Section 4.1</a>
  HTTPStatusCodePartialContent = 206,
/// Multi-Status: 207
/// seealso:
/// <a href="http://www.iana.org/go/rfc4918">RFC4918</a>
  HTTPStatusCodeMultiStatus = 207,
/// Already Reported: 208
/// seealso:
/// <a href="http://www.iana.org/go/rfc5842">RFC5842</a>
  HTTPStatusCodeAlreadyReported = 208,
/// IM Used: 226
/// seealso:
/// <a href="http://www.iana.org/go/rfc3229">RFC3229</a>
  HTTPStatusCodeIMUsed SWIFT_COMPILE_NAME("imUsed") = 226,
/// Multiple Choices: 300
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.4.1">RFC7231, Section 6.4.1</a>
  HTTPStatusCodeMultipleChoices = 300,
/// Moved Permanently: 301
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.4.2">RFC7231, Section 6.4.2</a>
  HTTPStatusCodeMovedPermanently = 301,
/// Found: 302
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.4.3">RFC7231, Section 6.4.3</a>
  HTTPStatusCodeFound = 302,
/// See Other: 303
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.4.4">RFC7231, Section 6.4.4</a>
  HTTPStatusCodeSeeOther = 303,
/// Not Modified: 304
/// seealso:
/// <a href="http://www.iana.org/go/rfc7232#section-4.1">RFC7232, Section 4.1</a>
  HTTPStatusCodeNotModified = 304,
/// Use Proxy: 305
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.4.5">RFC7231, Section 6.4.5</a>
  HTTPStatusCodeUseProxy = 305,
/// Temporary Redirect: 307
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.4.7">RFC7231, Section 6.4.7</a>
  HTTPStatusCodeTemporaryRedirect = 307,
/// Permanent Redirect: 308
/// seealso:
/// <a href="http://www.iana.org/go/rfc7538">RFC7538</a>
  HTTPStatusCodePermanentRedirect = 308,
/// Bad Request: 400
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.1">RFC7231, Section 6.5.1</a>
  HTTPStatusCodeBadRequest = 400,
/// Unauthorized: 401
/// seealso:
/// <a href="http://www.iana.org/go/rfc7235#section-3.1">RFC7235, Section 3.1</a>
  HTTPStatusCodeUnauthorized = 401,
/// Payment Required: 402
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.2">RFC7231, Section 6.5.2</a>
  HTTPStatusCodePaymentRequired = 402,
/// Forbidden: 403
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.3">RFC7231, Section 6.5.3</a>
  HTTPStatusCodeForbidden = 403,
/// Not Found: 404
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.4">RFC7231, Section 6.5.4</a>
  HTTPStatusCodeNotFound = 404,
/// Method Not Allowed: 405
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.5">RFC7231, Section 6.5.5</a>
  HTTPStatusCodeMethodNotAllowed = 405,
/// Not Acceptable: 406
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.6">RFC7231, Section 6.5.6</a>
  HTTPStatusCodeNotAcceptable = 406,
/// Proxy Authentication Required: 407
/// seealso:
/// <a href="http://www.iana.org/go/rfc7235#section-3.2">RFC7235, Section 3.2</a>
  HTTPStatusCodeProxyAuthenticationRequired = 407,
/// Request Timeout: 408
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.7">RFC7231, Section 6.5.7</a>
  HTTPStatusCodeRequestTimeout = 408,
/// Conflict: 409
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.8">RFC7231, Section 6.5.8</a>
  HTTPStatusCodeConflict = 409,
/// Gone: 410
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.9">RFC7231, Section 6.5.9</a>
  HTTPStatusCodeGone = 410,
/// Length Required: 411
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.10">RFC7231, Section 6.5.10</a>
  HTTPStatusCodeLengthRequired = 411,
/// Precondition Failed: 412
/// seealso:
/// <a href="http://www.iana.org/go/rfc7232#section-4.2">RFC7232, Section 4.2</a>
/// seealso:
/// <a href="http://www.iana.org/go/rfc8144#section-3.2">RFC8144, Section 3.2</a>
  HTTPStatusCodePreconditionFailed = 412,
/// Payload Too Large: 413
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.11">RFC7231, Section 6.5.11</a>
  HTTPStatusCodePayloadTooLarge = 413,
/// URI Too Long: 414
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.12">RFC7231, Section 6.5.12</a>
  HTTPStatusCodeURITooLong SWIFT_COMPILE_NAME("uriTooLong") = 414,
/// Unsupported Media Type: 415
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.13">RFC7231, Section 6.5.13</a>
/// seealso:
/// <a href="http://www.iana.org/go/rfc7694#section-3">RFC7694, Section 3</a>
  HTTPStatusCodeUnsupportedMediaType = 415,
/// Range Not Satisfiable: 416
/// seealso:
/// <a href="http://www.iana.org/go/rfc7233#section-4.4">RFC7233, Section 4.4</a>
  HTTPStatusCodeRangeNotSatisfiable = 416,
/// Expectation Failed: 417
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.14">RFC7231, Section 6.5.14</a>
  HTTPStatusCodeExpectationFailed = 417,
/// I’m A Teapot: 418
/// Returned by tea pots requested to brew coffee
/// seealso:
/// <a href="http://www.iana.org/go/rfc2324">RFC 2324</a>
  HTTPStatusCodeImATeapot = 418,
/// Misdirected Request: 421
/// seealso:
/// <a href="http://www.iana.org/go/rfc7540#section-9.1.2">RFC7540, Section 9.1.2</a>
  HTTPStatusCodeMisdirectedRequest = 421,
/// Unprocessable Entity: 422
/// seealso:
/// <a href="http://www.iana.org/go/rfc4918">RFC4918</a>
  HTTPStatusCodeUnprocessableEntity = 422,
/// Locked: 423
/// seealso:
/// <a href="http://www.iana.org/go/rfc4918">RFC4918</a>
  HTTPStatusCodeLocked = 423,
/// Failed Dependency: 424
/// seealso:
/// <a href="http://www.iana.org/go/rfc4918">RFC4918</a>
  HTTPStatusCodeFailedDependency = 424,
/// Too Early: 425
/// seealso:
/// <a href="http://www.iana.org/go/rfc8470">RFC8470</a>
  HTTPStatusCodeTooEarly = 425,
/// Upgrade Required: 426
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.5.15">RFC7231, Section 6.5.15</a>
  HTTPStatusCodeUpgradeRequired = 426,
/// Precondition Required: 428
/// seealso:
/// <a href="http://www.iana.org/go/rfc6585">RFC6585</a>
  HTTPStatusCodePreconditionRequired = 428,
/// Too Many Requests: 429
/// seealso:
/// <a href="http://www.iana.org/go/rfc6585">RFC6585</a>
  HTTPStatusCodeTooManyRequests = 429,
/// Request Header Fields Too Large: 431
/// seealso:
/// <a href="http://www.iana.org/go/rfc6585">RFC6585</a>
  HTTPStatusCodeRequestHeaderFieldsTooLarge = 431,
/// IIS Login Timeout: 440
/// The client’s session has expired and must log in again.
/// <em>Category</em>: Internet Information Services
/// seealso:
/// <a href="http://support.microsoft.com/kb/941201/en-us">Error message when you try to log on to Exchange 2007 by using Outlook Web Access: “440 Login Timeout”</a>
  HTTPStatusCodeIISLoginTimeout SWIFT_COMPILE_NAME("iisLoginTimeout") = 440,
/// nginx No Response: 444
/// Used to indicate that the server has returned no information to the client and closed the connection.
/// <em>Category</em>: nginx
  HTTPStatusCodeNginxNoResponse = 444,
/// IIS Retry With: 449
/// The server cannot honour the request because the user has not provided the required information.
/// <em>Category</em>: Internet Information Services
/// seealso:
/// <a href="https://msdn.microsoft.com/en-us/library/dd891478.aspx">2.2.6 449 Retry With Status Code</a>
  HTTPStatusCodeIISRetryWith SWIFT_COMPILE_NAME("iisRetryWith") = 449,
/// Blocked by Windows Parental Controls: 450
/// A Microsoft extension. This error is given when Windows Parental Controls are turned on and are blocking access to the given webpage.
  HTTPStatusCodeBlockedByWindowsParentalControls = 450,
/// Unavailable For Legal Reasons: 451
/// seealso:
/// <a href="http://www.iana.org/go/rfc7725">RFC7725</a>
  HTTPStatusCodeUnavailableForLegalReasons = 451,
/// nginx SSL Certificate Error: 495
/// An expansion of the 400 Bad Request response code, used when the client has provided an invalid client certificate.
/// <em>Category</em>: nginx
  HTTPStatusCodeNginxSSLCertificateError = 495,
/// nginx SSL Certificate Required: 496
/// An expansion of the 400 Bad Request response code, used when a client certificate is required but not provided.
/// <em>Category</em>: nginx
  HTTPStatusCodeNginxSSLCertificateRequired = 496,
/// nginx HTTP To HTTPS: 497
/// An expansion of the 400 Bad Request response code, used when the client has made a HTTP request to a port listening for HTTPS requests.
/// <em>Category</em>: nginx
  HTTPStatusCodeNginxHTTPToHTTPS = 497,
/// Token Expired: 498
/// Returned by <a href="https://en.wikipedia.org/wiki/ArcGIS_Server">ArcGIS for Server</a>. A code of 498 indicates an expired or otherwise invalid token.
/// seealso:
/// <a href="http://help.arcgis.com/en/arcgisserver/10.0/apis/soap/index.htm#Using_token_authentication.htm">Using token-based authentication</a>
  HTTPStatusCodeTokenExpired = 498,
/// nginx Client Closed Request: 499
/// Used when the client has closed the request before the server could send a response.
/// <em>Category</em>: nginx
  HTTPStatusCodeNginxClientClosedRequest = 499,
/// Internal Server Error: 500
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.6.1">RFC7231, Section 6.6.1</a>
  HTTPStatusCodeInternalServerError = 500,
/// Not Implemented: 501
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.6.2">RFC7231, Section 6.6.2</a>
  HTTPStatusCodeNotImplemented = 501,
/// Bad Gateway: 502
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.6.3">RFC7231, Section 6.6.3</a>
  HTTPStatusCodeBadGateway = 502,
/// Service Unavailable: 503
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.6.4">RFC7231, Section 6.6.4</a>
  HTTPStatusCodeServiceUnavailable = 503,
/// Gateway Timeout: 504
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.6.5">RFC7231, Section 6.6.5</a>
  HTTPStatusCodeGatewayTimeout = 504,
/// HTTP Version Not Supported: 505
/// seealso:
/// <a href="http://www.iana.org/go/rfc7231#section-6.6.6">RFC7231, Section 6.6.6</a>
  HTTPStatusCodeHTTPVersionNotSupported SWIFT_COMPILE_NAME("httpVersionNotSupported") = 505,
/// Variant Also Negotiates: 506
/// seealso:
/// <a href="http://www.iana.org/go/rfc2295">RFC2295</a>
  HTTPStatusCodeVariantAlsoNegotiates = 506,
/// Insufficient Storage: 507
/// seealso:
/// <a href="http://www.iana.org/go/rfc4918">RFC4918</a>
  HTTPStatusCodeInsufficientStorage = 507,
/// Loop Detected: 508
/// seealso:
/// <a href="http://www.iana.org/go/rfc5842">RFC5842</a>
  HTTPStatusCodeLoopDetected = 508,
/// Bandwidth Limit Exceeded: 509
/// The server has exceeded the bandwidth specified by the server administrator; this is often used by shared hosting providers to limit the bandwidth of customers.
/// seealso:
/// <a href="https://documentation.cpanel.net/display/CKB/HTTP+Error+Codes+and+Quick+Fixes#HTTPErrorCodesandQuickFixes-509BandwidthLimitExceeded">https://documentation.cpanel.net/display/CKB/HTTP+Error+Codes+and+Quick+Fixes#HTTPErrorCodesandQuickFixes-509BandwidthLimitExceeded</a>
  HTTPStatusCodeBandwidthLimitExceeded = 509,
/// Not Extended: 510
/// seealso:
/// <a href="http://www.iana.org/go/rfc2774">RFC2774</a>
  HTTPStatusCodeNotExtended = 510,
/// Network Authentication Required: 511
/// seealso:
/// <a href="http://www.iana.org/go/rfc6585">RFC6585</a>
  HTTPStatusCodeNetworkAuthenticationRequired = 511,
/// Site is frozen: 530
/// Used by the <a href="https://en.wikipedia.org/wiki/Pantheon_(software)">Pantheon</a> web platform to indicate a site that has been frozen due to inactivity.
  HTTPStatusCodeSiteIsFrozen = 530,
/// Network Connect Timeout Error: 599
/// This status code is not specified in any RFCs, but is used by some HTTP proxies to signal a network connect timeout behind the proxy to a client in front of the proxy.
  HTTPStatusCodeNetworkConnectTimeoutError = 599,
};



@class NSURL;
@class NSString;

@interface NSHTTPURLResponse (SWIFT_EXTENSION(RingmeOttSdk))
/// Marked internal to expose (as <code>statusCodeValue</code>) for Objective-C interoperability only.
///
/// returns:
/// the receiver’s HTTP status code.
@property (nonatomic, readonly) enum HTTPStatusCode statusCodeValue;
/// Initializer for NSHTTPURLResponse objects.
/// \param url the URL from which the response was generated.
///
/// \param statusCode an HTTP status code.
///
/// \param HTTPVersion the version of the HTTP response as represented by the server.  This is typically represented as “HTTP/1.1”.
///
/// \param headerFields a dictionary representing the header keys and values of the server response.
///
///
/// returns:
/// the instance of the object, or <code>nil</code> if an error occurred during initialization.
- (nullable instancetype)initWithURL:(NSURL * _Nonnull)url statusCodeValue:(enum HTTPStatusCode)statusCode HTTPVersion:(NSString * _Nullable)httpVersion headerFields:(NSDictionary<NSString *, NSString *> * _Nullable)headerFields SWIFT_AVAILABILITY(ios,introduced=7.0);
@end


SWIFT_CLASS("_TtC12RingmeOttSdk6Loggly")
@interface Loggly : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


















SWIFT_CLASS("_TtC12RingmeOttSdk14PhoneNumberKit")
@interface PhoneNumberKit : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Custom text field that formats phone numbers
SWIFT_CLASS("_TtC12RingmeOttSdk20PhoneNumberTextField")
@interface PhoneNumberTextField : UITextField <UITextFieldDelegate>
/// Override setText so number will be automatically formatted when setting text by code
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) id <UITextFieldDelegate> _Nullable delegate;
/// Init with frame
/// \param frame UITextfield F
///
///
/// returns:
/// UITextfield
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Init with coder
/// \param aDecoder decoder
///
///
/// returns:
/// UITextfield
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldBeginEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldEndEditing:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
- (BOOL)textFieldShouldClear:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end

enum PopoverType : NSInteger;
@class UIBlurEffect;
@class UIControl;

SWIFT_CLASS("_TtC12RingmeOttSdk7Popover")
@interface Popover : UIView
@property (nonatomic) CGSize arrowSize;
@property (nonatomic) NSTimeInterval animationIn;
@property (nonatomic) NSTimeInterval animationOut;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat sideEdge;
@property (nonatomic) enum PopoverType popoverType;
@property (nonatomic, strong) UIColor * _Nonnull blackOverlayColor;
@property (nonatomic, strong) UIBlurEffect * _Nullable overlayBlur;
@property (nonatomic, strong) UIColor * _Nonnull popoverColor;
@property (nonatomic) BOOL dismissOnBlackOverlayTap;
@property (nonatomic) BOOL showBlackOverlay;
@property (nonatomic) BOOL highlightFromView;
@property (nonatomic) CGFloat highlightCornerRadius;
@property (nonatomic) CGFloat springDamping;
@property (nonatomic) CGFloat initialSpringVelocity;
@property (nonatomic) CGFloat sideOffset;
@property (nonatomic, strong) UIColor * _Nullable borderColor;
@property (nonatomic, copy) void (^ _Nullable willShowHandler)(void);
@property (nonatomic, copy) void (^ _Nullable willDismissHandler)(void);
@property (nonatomic, copy) void (^ _Nullable didShowHandler)(void);
@property (nonatomic, copy) void (^ _Nullable didDismissHandler)(void);
@property (nonatomic, readonly, strong) UIControl * _Nonnull blackOverlay;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithShowHandler:(void (^ _Nullable)(void))showHandler dismissHandler:(void (^ _Nullable)(void))dismissHandler OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)showAsDialog:(UIView * _Nonnull)contentView;
- (void)showAsDialog:(UIView * _Nonnull)contentView inView:(UIView * _Nonnull)inView;
- (void)show:(UIView * _Nonnull)contentView fromView:(UIView * _Nonnull)fromView;
- (void)show:(UIView * _Nonnull)contentView fromView:(UIView * _Nonnull)fromView inView:(UIView * _Nonnull)inView;
- (void)show:(UIView * _Nonnull)contentView point:(CGPoint)point;
- (void)show:(UIView * _Nonnull)contentView point:(CGPoint)point inView:(UIView * _Nonnull)inView;
- (BOOL)accessibilityPerformEscape SWIFT_WARN_UNUSED_RESULT;
- (void)dismiss;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM(NSInteger, PopoverType, closed) {
  PopoverTypeUp = 0,
  PopoverTypeDown = 1,
  PopoverTypeLeft = 2,
  PopoverTypeRight = 3,
  PopoverTypeAuto = 4,
};


SWIFT_CLASS_NAMED("RM_SessionDelegate")
@interface KFSessionDelegate : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSData;
@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSURLRequest;

@interface KFSessionDelegate (SWIFT_EXTENSION(RingmeOttSdk)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
@end


SWIFT_CLASS("_TtC12RingmeOttSdk26RingmeLoadingIndicatorView")
@interface RingmeLoadingIndicatorView : UIView
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trackTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull progressTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable innerTintColor;
@property (nonatomic) IBInspectable BOOL roundedCorners;
@property (nonatomic) IBInspectable CGFloat thicknessRatio;
@property (nonatomic) IBInspectable BOOL clockwiseProgress;
@property (nonatomic, readonly) IBInspectable CGFloat progress;
@property (nonatomic) IBInspectable CGFloat indeterminateProgress;
@property (nonatomic) IBInspectable CFTimeInterval indeterminateDuration;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class CAAnimation;

@interface RingmeLoadingIndicatorView (SWIFT_EXTENSION(RingmeOttSdk)) <CAAnimationDelegate>
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
@end



SWIFT_CLASS("_TtC12RingmeOttSdk12RingmeOttSdk")
@interface RingmeOttSdk : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RingmeOttSdk * _Nonnull shared;)
+ (RingmeOttSdk * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class UIWindow;
@class NSNotification;
@class UIGestureRecognizer;
@class NSAttributedString;
@class UIFont;

IB_DESIGNABLE
SWIFT_CLASS("_TtC12RingmeOttSdk17RingmeScrollLabel")
@interface RingmeScrollLabel : UILabel <CAAnimationDelegate>
/// A boolean property that sets whether the <code>MarqueeLabel</code> should behave like a normal <code>UILabel</code>.
/// When set to <code>true</code> the <code>MarqueeLabel</code> will behave and look like a normal <code>UILabel</code>, and  will not begin any scrolling animations.
/// Changes to this property take effect immediately, removing any in-flight animation as well as any edge fade. Note that <code>MarqueeLabel</code>
/// will respect the current values of the <code>lineBreakMode</code> and <code>textAlignment</code>properties while labelized.
/// To simply prevent automatic scrolling, use the <code>holdScrolling</code> property.
/// Defaults to <code>false</code>.
/// seealso:
/// holdScrolling
/// seealso:
/// lineBreakMode
/// note:
/// The label will not automatically scroll when this property is set to <code>true</code>.
/// warning:
/// The UILabel default setting for the <code>lineBreakMode</code> property is <code>NSLineBreakByTruncatingTail</code>, which truncates
/// the text adds an ellipsis glyph (…). Set the <code>lineBreakMode</code> property to <code>NSLineBreakByClipping</code> in order to avoid the
/// ellipsis, especially if using an edge transparency fade.
@property (nonatomic) IBInspectable BOOL labelize;
/// A boolean property that sets whether the <code>MarqueeLabel</code> should hold (prevent) automatic label scrolling.
/// When set to <code>true</code>, <code>MarqueeLabel</code> will not automatically scroll even its text is larger than the specified frame,
/// although the specified edge fades will remain.
/// To set <code>MarqueeLabel</code> to act like a normal UILabel, use the <code>labelize</code> property.
/// Defaults to <code>false</code>.
/// note:
/// The label will not automatically scroll when this property is set to <code>true</code>.
/// seealso:
/// labelize
@property (nonatomic) IBInspectable BOOL holdScrolling;
/// A boolean property that sets whether the <code>MarqueeLabel</code> should scroll, even if the specificed test string
/// can be fully contained within the label frame.
/// If this property is set to <code>true</code>, the <code>MarqueeLabel</code> will automatically scroll regardless of text string
/// length, although this can still be overridden by the <code>tapToScroll</code> and <code>holdScrolling</code> properties.
/// Defaults to <code>false</code>.
/// warning:
/// Forced scrolling may have unexpected edge cases or have unusual characteristics compared to the
/// ‘normal’ scrolling feature.
/// seealso:
/// holdScrolling
/// seealso:
/// tapToScroll
@property (nonatomic) IBInspectable BOOL forceScrolling;
/// A boolean property that sets whether the <code>MarqueeLabel</code> should only begin a scroll when tapped.
/// If this property is set to <code>true</code>, the <code>MarqueeLabel</code> will only begin a scroll animation cycle when tapped. The label will
/// not automatically being a scroll. This setting overrides the setting of the <code>holdScrolling</code> property.
/// Defaults to <code>false</code>.
/// note:
/// The label will not automatically scroll when this property is set to <code>false</code>.
/// seealso:
/// holdScrolling
@property (nonatomic) IBInspectable BOOL tapToScroll;
@property (nonatomic) IBInspectable CGFloat scrollDuration SWIFT_DEPRECATED_MSG("Use speed property instead");
@property (nonatomic) IBInspectable CGFloat scrollRate SWIFT_DEPRECATED_MSG("Use speed property instead");
/// A buffer (offset) between the leading edge of the label text and the label frame.
/// This property adds additional space between the leading edge of the label text and the label frame. The
/// leading edge is the edge of the label text facing the direction of scroll (i.e. the edge that animates
/// offscreen first during scrolling).
/// Defaults to <code>0</code>.
/// note:
/// The value set to this property affects label positioning at all times (including when <code>labelize</code> is set to <code>true</code>),
/// including when the text string length is short enough that the label does not need to scroll.
/// note:
/// For Continuous-type labels, the smallest value of <code>leadingBuffer</code>, <code>trailingBuffer</code>, and <code>fadeLength</code>
/// is used as spacing between the two label instances. Zero is an allowable value for all three properties.
/// seealso:
/// trailingBuffer
@property (nonatomic) IBInspectable CGFloat leadingBuffer;
/// A buffer (offset) between the trailing edge of the label text and the label frame.
/// This property adds additional space (buffer) between the trailing edge of the label text and the label frame. The
/// trailing edge is the edge of the label text facing away from the direction of scroll (i.e. the edge that animates
/// offscreen last during scrolling).
/// Defaults to <code>0</code>.
/// note:
/// The value set to this property has no effect when the <code>labelize</code> property is set to <code>true</code>.
/// note:
/// For Continuous-type labels, the smallest value of <code>leadingBuffer</code>, <code>trailingBuffer</code>, and <code>fadeLength</code>
/// is used as spacing between the two label instances. Zero is an allowable value for all three properties.
/// seealso:
/// leadingBuffer
@property (nonatomic) IBInspectable CGFloat trailingBuffer;
/// The length of transparency fade at the left and right edges of the frame.
/// This propery sets the size (in points) of the view edge transparency fades on the left and right edges of a <code>MarqueeLabel</code>. The
/// transparency fades from an alpha of 1.0 (fully visible) to 0.0 (fully transparent) over this distance. Values set to this property
/// will be sanitized to prevent a fade length greater than 1/2 of the frame width.
/// Defaults to <code>0</code>.
@property (nonatomic) IBInspectable CGFloat fadeLength;
/// The length of delay in seconds that the label pauses at the completion of a scroll.
@property (nonatomic) IBInspectable CGFloat animationDelay;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// Returns a newly initialized <code>MarqueeLabel</code> instance.
/// The default scroll duration of 7.0 seconds and fade length of 0.0 are used.
/// \param frame A rectangle specifying the initial location and size of the view in its superview’s coordinates. Text (for the given font, font size, etc.) that does not fit in this frame will automatically scroll.
///
///
/// returns:
/// An initialized <code>MarqueeLabel</code> object or nil if the object couldn’t be created.
- (nonnull instancetype)initWithFrame:(CGRect)frame;
- (void)awakeFromNib;
- (void)prepareForInterfaceBuilder SWIFT_AVAILABILITY(ios,introduced=8.0);
- (void)layoutSubviews;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
- (void)didMoveToWindow;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)drawLayer:(CALayer * _Nonnull)layer inContext:(CGContextRef _Nonnull)ctx;
- (void)restartForViewController:(NSNotification * _Nonnull)notification;
- (void)labelizeForController:(NSNotification * _Nonnull)notification;
- (void)animateForController:(NSNotification * _Nonnull)notification;
/// Immediately resets the label to the home position, cancelling any in-flight scroll animation, and restarts the scroll animation if the appropriate conditions are met.
/// seealso:
/// resetLabel
/// seealso:
/// triggerScrollStart
- (void)restartLabel;
/// Immediately resets the label to the home position, cancelling any in-flight scroll animation.
/// The text is immediately returned to the home position. Scrolling will not resume automatically after a call to this method.
/// To re-initiate scrolling use a call to <code>restartLabel</code> or <code>triggerScrollStart</code>, or make a change to a UILabel property such as text, bounds/frame,
/// font, font size, etc.
/// seealso:
/// restartLabel
/// seealso:
/// triggerScrollStart
- (void)shutdownLabel;
- (void)labelWasTapped:(UIGestureRecognizer * _Nonnull)recognizer;
- (UIView * _Nonnull)viewForBaselineLayout SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) UIView * _Nonnull viewForLastBaselineLayout;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic, strong) UIFont * _Null_unspecified font;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable shadowColor;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic, strong) UIColor * _Nullable highlightedTextColor;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic) NSInteger numberOfLines;
@property (nonatomic) UIBaselineAdjustment baselineAdjustment;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (void)tintColorDidChange;
@property (nonatomic) UIViewContentMode contentMode;
@property (nonatomic) BOOL isAccessibilityElement;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC12RingmeOttSdk27SegmentPageIndicatorControl")
@interface SegmentPageIndicatorControl : UIView
@property (nonatomic) IBInspectable NSInteger pageCount;
@property (nonatomic) IBInspectable CGFloat progress;
@property (nonatomic) IBInspectable CGSize pillSize;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull activeTint;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull inactiveTint;
@property (nonatomic) IBInspectable CGFloat indicatorPadding;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (CGSize)sizeThatFits:(CGSize)size SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// Class which implements the various <code>URLSessionDelegate</code> methods to connect various Alamofire features.
SWIFT_CLASS("_TtC12RingmeOttSdk15SessionDelegate")
@interface SessionDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface SessionDelegate (SWIFT_EXTENSION(RingmeOttSdk)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end

@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(RingmeOttSdk)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionDownloadTask;

@interface SessionDelegate (SWIFT_EXTENSION(RingmeOttSdk)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end

@class NSInputStream;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(RingmeOttSdk)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task SWIFT_AVAILABILITY(watchos,introduced=4.0) SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0) SWIFT_AVAILABILITY(macos,introduced=10.13);
@end













































#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
